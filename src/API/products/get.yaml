summary: List Products
description: |
    Returns list of products (and their data) in paginated form.

    Allows filtering and sorting through query params,
    as well as changing page size and forcing different month using X-* headers.
tags:
    - Product
parameters:
    - in: header
      name: X-TimeTravel-Month
      schema:
        type: integer
        minimum: 1
        maximum: 12
      description: |
        Parameter that allows changing month that prices (or sometimes availability)
        are retrieved for.
        
        Defaults to current month of server date.
    - in: query
      name: order
      schema:
        type: string
        enum:
            - availability-asc
            - availability-desc
            - name-asc
            - name-desc
            - price-asc
            - price-desc
      required: false
      description: |
        Parameters that controls order in which products are returned.

        Defaults to `name-asc`.
    - in: query
      name: isSeason
      schema:
        type: boolean
      required: false
      description: |
        Filters on seasonal products.

        If missing, does not filter on category.
    - in: query
      name: category
      schema:
        type: string
        enum:
            - vegetable
            - fruit
            - ingredients
      required: false
      description: |
        Filters on category of products.

        If missing, does not filter on category.
    - in: query
      name: discount
      schema:
        type: boolean
      required: false
      description: |
        Filters on whether product is discounted, or not.

        If missing, does not filter on category.
    - in: query
      name: price-min
      schema:
        type: number
        minimum: 0.01
        maximum: "price-max - 0.01"
      required: false
      description: |
        Filters on minimum price (after discount).

        There must exist relationship between `price-min <= price-max`,
        if both are present.
    - in: query
      name: price-max
      schema:
        type: number
        minimum: "price-min + 0.01"
      required: false
      description: |
        Filters on maximum price (after discount).

        There must exist relationship between `price-min <= price-max`,
        if both are present.
    - in: query
      name: page
      schema:
        type: number
        minimum: 1
        maximum: "response.body.pages.lastPage"
    - in: query
      name: page-size
      required: false
      schema:
        type: integer
        minimum: 5
        maximum: 90
      description: |
        Parameter that allows changing default page size
        (changing it on page > 1 will return first page in new pagination scheme).

        Defaults to 10.
    
responses:
    "200":
        x-summary: Products retrieved
        description: |
            Returns list of products that correspond to specified filters,
            and "cursor" representation.

            List of products will not contain more than `request.headers.X-Page-Size`,
            but can contain less on last page (that also can be first if there are few
            resulting products).
        content:
            application/json:
                schema:
                    $ref: ":schema:/:ProductList"
                example:
                    $ref: ":example:/:ProductList"
    "400":
        x-summary: Bad request
        description: |
            Required parameters are missing, or in wrong data type/format.

            Returns error message.
        content:
            text/plain:
                schema:
                    type: string
    "422":
        x-summary: Invalid parameter values
        description: |
            Required parameters are present and contain valid data, but
            assertions are failed, for example when:
                
            - `query.price-min` > `query.price-max`,
            - `query.page` > `response.body.pages.lastPage`.
            
            Returns error message.
        content:
            text/plain:
                schema:
                    type: string
# x-codeSamples:
#     - lang: JavaScript
#       label: JS
#       source:
#         $ref: ./samples/products-get.js
